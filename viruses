--3D GUI BY sussyyyyyyYYYYYY






local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local head = character:WaitForChild("Head")

-- Create the floating part for the GUI
local part = Instance.new("Part")
part.Size = Vector3.new(10, 5, 0.1)
part.Anchored = true
part.CanCollide = false
part.Transparency = 1
part.Parent = workspace

-- Create SurfaceGui for the front
local surfaceGuiFront = Instance.new("SurfaceGui")
surfaceGuiFront.Adornee = part
surfaceGuiFront.Face = Enum.NormalId.Front
surfaceGuiFront.CanvasSize = Vector2.new(600, 300)
surfaceGuiFront.Parent = part

-- Create Frame with a transparent background for the front
local frameFront = Instance.new("Frame")
frameFront.Size = UDim2.new(1, 0, 1, 0)
frameFront.BackgroundTransparency = 0.4 -- More transparency
frameFront.BackgroundColor3 = Color3.new(0, 0, 0) -- Black background
frameFront.BorderSizePixel = 2
frameFront.Parent = surfaceGuiFront

-- Add rounded corners to the front frame
local cornerFront = Instance.new("UICorner")
cornerFront.CornerRadius = UDim.new(0, 20) -- Adjust corner radius for roundness (higher number = more round)
cornerFront.Parent = frameFront

-- Add the username and profile picture
local usernameLabel = Instance.new("TextLabel")
usernameLabel.Size = UDim2.new(0.6, 0, 0.2, 0)
usernameLabel.Position = UDim2.new(0.2, 0, 0.1, 0)
usernameLabel.Text = player.DisplayName .. " (@ " .. player.Name .. ")" -- Username and Display Name
usernameLabel.TextScaled = true
usernameLabel.BackgroundTransparency = 1
usernameLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- White color
usernameLabel.Font = Enum.Font.GothamBold
usernameLabel.Parent = frameFront

-- Add rounded corners to the username label
local usernameCorner = Instance.new("UICorner")
usernameCorner.CornerRadius = UDim.new(0, 20)
usernameCorner.Parent = usernameLabel

local userIdLabel = Instance.new("TextLabel")
userIdLabel.Size = UDim2.new(0.6, 0, 0.1, 0)
userIdLabel.Position = UDim2.new(0.2, 0, 0.3, 0)
userIdLabel.Text = "UserID: " .. player.UserId
userIdLabel.TextScaled = true
userIdLabel.BackgroundTransparency = 1
userIdLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- White color
userIdLabel.Font = Enum.Font.Gotham
userIdLabel.Parent = frameFront

-- Add rounded corners to the userId label
local userIdCorner = Instance.new("UICorner")
userIdCorner.CornerRadius = UDim.new(0, 20)
userIdCorner.Parent = userIdLabel

-- Display the profile picture next to the username
local profileImage = Instance.new("ImageLabel")
profileImage.Size = UDim2.new(0.2, 0, 0.2, 0)
profileImage.Position = UDim2.new(0, 0, 0.1, 0)
profileImage.Image = "rbxthumb://type=AvatarHeadShot&id=" .. player.UserId .. "&w=420&h=420"
profileImage.BackgroundTransparency = 1
profileImage.Parent = frameFront

-- Add rounded corners to the profile image
local profileCorner = Instance.new("UICorner")
profileCorner.CornerRadius = UDim.new(0, 20)
profileCorner.Parent = profileImage

-- Add FPS and Ping indicators
local fpsLabel = Instance.new("TextLabel")
fpsLabel.Size = UDim2.new(0.6, 0, 0.1, 0)
fpsLabel.Position = UDim2.new(0.2, 0, 0.5, 0)
fpsLabel.Text = "FPS: Calculating..."
fpsLabel.TextScaled = true
fpsLabel.BackgroundTransparency = 1
fpsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
fpsLabel.Font = Enum.Font.Gotham
fpsLabel.Parent = frameFront

-- Add rounded corners to the FPS label
local fpsCorner = Instance.new("UICorner")
fpsCorner.CornerRadius = UDim.new(0, 20)
fpsCorner.Parent = fpsLabel

local pingLabel = Instance.new("TextLabel")
pingLabel.Size = UDim2.new(0.6, 0, 0.1, 0)
pingLabel.Position = UDim2.new(0.2, 0, 0.6, 0)
pingLabel.Text = "Ping: Calculating..."
pingLabel.TextScaled = true
pingLabel.BackgroundTransparency = 1
pingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
pingLabel.Font = Enum.Font.Gotham
pingLabel.Parent = frameFront

-- Add rounded corners to the ping label
local pingCorner = Instance.new("UICorner")
pingCorner.CornerRadius = UDim.new(0, 20)
pingCorner.Parent = pingLabel

-- Show join date
local joinDateLabel = Instance.new("TextLabel")
joinDateLabel.Size = UDim2.new(0.6, 0, 0.1, 0)
joinDateLabel.Position = UDim2.new(0.2, 0, 0.7, 0)
joinDateLabel.Text = "Join Date: " .. player.AccountAge .. " days"
joinDateLabel.TextScaled = true
joinDateLabel.BackgroundTransparency = 1
joinDateLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
joinDateLabel.Font = Enum.Font.Gotham
joinDateLabel.Parent = frameFront

-- Add rounded corners to the join date label
local joinDateCorner = Instance.new("UICorner")
joinDateCorner.CornerRadius = UDim.new(0, 20)
joinDateCorner.Parent = joinDateLabel

-- Create SurfaceGui for the back with transparent color
local surfaceGuiBack = Instance.new("SurfaceGui")
surfaceGuiBack.Adornee = part
surfaceGuiBack.Face = Enum.NormalId.Back
surfaceGuiBack.CanvasSize = Vector2.new(600, 300)
surfaceGuiBack.Parent = part

-- Create Frame with transparent black background for the back
local frameBack = Instance.new("Frame")
frameBack.Size = UDim2.new(1, 0, 1, 0)
frameBack.BackgroundTransparency = 0.8 -- More transparency
frameBack.BackgroundColor3 = Color3.new(0, 0, 0) -- Black background
frameBack.BorderSizePixel = 2
frameBack.Parent = surfaceGuiBack

-- Add rounded corners to the back frame
local cornerBack = Instance.new("UICorner")
cornerBack.CornerRadius = UDim.new(0, 20)
cornerBack.Parent = frameBack

-- Create the lock GUI button with improved visuals
local lockButton = Instance.new("TextButton")
lockButton.Size = UDim2.new(0.2, 0, 0.1, 0)
lockButton.Position = UDim2.new(0.8, 0, 0, 0) -- Top-right corner
lockButton.BackgroundColor3 = Color3.fromRGB(50, 50, 255) -- Colorful lock button
lockButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
lockButton.Font = Enum.Font.GothamBold
lockButton.Text = "Lock GUI"
lockButton.Parent = frameFront

-- Add rounded corners to the lock button
local lockButtonCorner = Instance.new("UICorner")
lockButtonCorner.CornerRadius = UDim.new(0, 20)
lockButtonCorner.Parent = lockButton

-- Lock functionality
local isLocked = false
lockButton.MouseButton1Click:Connect(function()
    isLocked = not isLocked
    if isLocked then
        lockButton.Text = "Unlock GUI"
        lockButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50) -- Change color when locked
    else
        lockButton.Text = "Lock GUI"
        lockButton.BackgroundColor3 = Color3.fromRGB(50, 50, 255) -- Color when unlocked
    end
end)

-- Function to calculate and display FPS and Ping
local lastTime = tick()
local fpsCounter = 0
game:GetService("RunService").RenderStepped:Connect(function(deltaTime)
    fpsCounter = fpsCounter + 1
    if tick() - lastTime >= 1 then
        fpsLabel.Text = "FPS: " .. fpsCounter
        fpsCounter = 0
        lastTime = tick()
    end

    -- Ping calculation (add your method here)
    local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
    pingLabel.Text = "Ping: " .. ping .. " ms"
end)

-- Update GUI position and make it follow the player (unless locked)
game:GetService("RunService").RenderStepped:Connect(function()
    if not isLocked then
        local guiPosition = head.CFrame *CFrame.new(5, 2, -5)
        local lookAtPosition = head.Position
        local targetCFrame = CFrame.new(guiPosition.Position, lookAtPosition)
        part.CFrame = part.CFrame:Lerp(targetCFrame, 0.1) -- Slower follow speed for smooth movement
    end
end)
wait(0.6)
-- Ensure this script is a LocalScript

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local head = character:WaitForChild("Head")
local humanoid = character:WaitForChild("Humanoid")

-- Create a part for the floating GUI
local part = Instance.new("Part")
part.Size = Vector3.new(10, 5, 0.1)
part.Anchored = true
part.CanCollide = false
part.Transparency = 1
part.Parent = workspace

-- Function to create a SurfaceGui
local function createSurfaceGui(face)
    local surfaceGui = Instance.new("SurfaceGui")
    surfaceGui.Adornee = part
    surfaceGui.Face = face
    surfaceGui.CanvasSize = Vector2.new(400, 200)
    surfaceGui.Parent = part

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    frame.BackgroundTransparency = 0.5
    frame.Parent = surfaceGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = frame

    -- Add labels for speed, jump height, and health
    local speedLabel = Instance.new("TextLabel")
    speedLabel.Size = UDim2.new(1, 0, 0.3, 0)
    speedLabel.Position = UDim2.new(0, 0, 0, 0)
    speedLabel.Text = "Speed: Calculating..."
    speedLabel.TextScaled = true
    speedLabel.BackgroundTransparency = 1
    speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    speedLabel.Font = Enum.Font.Gotham
    speedLabel.Name = "SpeedLabel"
    speedLabel.Parent = frame

    local jumpHeightLabel = Instance.new("TextLabel")
    jumpHeightLabel.Size = UDim2.new(1, 0, 0.3, 0)
    jumpHeightLabel.Position = UDim2.new(0, 0, 0.3, 0)
    jumpHeightLabel.Text = "Jump Height: Calculating..."
    jumpHeightLabel.TextScaled = true
    jumpHeightLabel.BackgroundTransparency = 1
    jumpHeightLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    jumpHeightLabel.Font = Enum.Font.Gotham
    jumpHeightLabel.Name = "JumpHeightLabel"
    jumpHeightLabel.Parent = frame

    local healthLabel = Instance.new("TextLabel")
    healthLabel.Size = UDim2.new(1, 0, 0.3, 0)
    healthLabel.Position = UDim2.new(0, 0, 0.6, 0)
    healthLabel.Text = "Health: Calculating..."
    healthLabel.TextScaled = true
    healthLabel.BackgroundTransparency = 1
    healthLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    healthLabel.Font = Enum.Font.Gotham
    healthLabel.Name = "HealthLabel"
    healthLabel.Parent = frame

    -- Add lock button
    local lockButton = Instance.new("TextButton")
    lockButton.Size = UDim2.new(0.2, 0, 0.1, 0)
    lockButton.Position = UDim2.new(0.8, 0, 0, 0) -- Top-right corner
    lockButton.BackgroundColor3 = Color3.fromRGB(50, 50, 255) -- Colorful lock button
    lockButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
    lockButton.Font = Enum.Font.GothamBold
    lockButton.Text = "Lock GUI"
    lockButton.Parent = frame

    return surfaceGui, lockButton, speedLabel, jumpHeightLabel, healthLabel
end

-- Create SurfaceGui on both sides of the part
local surfaceGuiFront, lockButtonFront, speedLabelFront, jumpHeightLabelFront, healthLabelFront = createSurfaceGui(Enum.NormalId.Front)
local surfaceGuiBack, lockButtonBack, speedLabelBack, jumpHeightLabelBack, healthLabelBack = createSurfaceGui(Enum.NormalId.Back)

-- Variables for smooth position updates
local runService = game:GetService("RunService")
local lastPosition = character.PrimaryPart.Position
local lastTick = tick()
local isLocked = false

-- Function to smoothly update the GUI's position
local function updateGuiPosition()
    runService.RenderStepped:Connect(function()
        if not isLocked then
            local guiPosition = head.CFrame * CFrame.new(0, 5, 5) -- Position slightly in front and above
            part.CFrame = CFrame.new(part.Position:Lerp(guiPosition.Position, 0.05), head.Position)
        end
    end)
end

-- Function to update the GUI with current player stats
local function updateStats()
    runService.RenderStepped:Connect(function()
        -- Update speed
        local currentSpeed = (character.PrimaryPart.Position - lastPosition).magnitude / (tick() - lastTick)
        lastPosition = character.PrimaryPart.Position
        lastTick = tick()
        speedLabelFront.Text = "Speed: " .. string.format("%.1f", currentSpeed) .. " studs/sec" -- Reduced decimal places
        speedLabelBack.Text = speedLabelFront.Text

        -- Update jump height
        jumpHeightLabelFront.Text = "Jump Height: " .. string.format("%.1f", humanoid.JumpPower) .. " studs" -- Reduced decimal places
        jumpHeightLabelBack.Text = jumpHeightLabelFront.Text

        -- Update health
        local healthPercent = (humanoid.Health / humanoid.MaxHealth) * 100
        healthLabelFront.Text = "Health: " .. string.format("%.0f", healthPercent) .. "%" -- Integer percentage
        healthLabelBack.Text = healthLabelFront.Text
    end)
end

-- Lock functionality
lockButtonFront.MouseButton1Click:Connect(function()
    isLocked = not isLocked
    if isLocked then
        lockButtonFront.Text = "Unlock GUI"
        lockButtonFront.BackgroundColor3 = Color3.fromRGB(255, 50, 50) -- Change color when locked
        lockButtonBack.Text = "Unlock GUI"
        lockButtonBack.BackgroundColor3 = Color3.fromRGB(255, 50, 50) -- Change color when locked
    else
        lockButtonFront.Text = "Lock GUI"
        lockButtonFront.BackgroundColor3 = Color3.fromRGB(50, 50, 255) -- Color when unlocked
        lockButtonBack.Text = "Lock GUI"
        lockButtonBack.BackgroundColor3 = Color3.fromRGB(50, 50, 255) -- Color when unlocked
    end
end)

-- Start updating the GUI position and player stats
updateGuiPosition()
updateStats()
wait(0.7)
-- Ensure this script is a LocalScript

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local head = character:WaitForChild("Head")

-- Create a part for the floating GUI
local part = Instance.new("Part")
part.Size = Vector3.new(10, 5, 0.1)
part.Anchored = true
part.CanCollide = false
part.Transparency = 1
part.Parent = workspace

-- Create the SurfaceGui for the front
local frontSurfaceGui = Instance.new("SurfaceGui")
frontSurfaceGui.Adornee = part
frontSurfaceGui.Face = Enum.NormalId.Front -- Display on the front
frontSurfaceGui.CanvasSize = Vector2.new(600, 300)
frontSurfaceGui.Parent = part

-- Create a Frame for the front with an outline effect
local frontFrame = Instance.new("Frame")
frontFrame.Size = UDim2.new(1, 0, 1, 0)
frontFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
frontFrame.BorderSizePixel = 4 -- Increase the border to create an outline effect
frontFrame.BorderColor3 = Color3.fromRGB(0, 255, 0) -- Outline color (green)
frontFrame.Parent = frontSurfaceGui

-- Create a TextLabel for the front
local frontGlitchLabel = Instance.new("TextLabel")
frontGlitchLabel.Size = UDim2.new(1, 0, 0.8, 0) -- Leave space for the close button
frontGlitchLabel.BackgroundTransparency = 1
frontGlitchLabel.TextColor3 = Color3.new(1, 0, 0) -- Red color
frontGlitchLabel.Font = Enum.Font.GothamBold -- Fancy font
frontGlitchLabel.Text = "BY SUSSY (beta version)"
frontGlitchLabel.TextScaled = true
frontGlitchLabel.Parent = frontFrame

-- Create a SurfaceGui for the back
local backSurfaceGui = Instance.new("SurfaceGui")
backSurfaceGui.Adornee = part
backSurfaceGui.Face = Enum.NormalId.Back -- Display on the back
backSurfaceGui.CanvasSize = Vector2.new(600, 300)
backSurfaceGui.Parent = part

-- Create a Frame for the back with an outline effect
local backFrame = Instance.new("Frame")
backFrame.Size = UDim2.new(1, 0, 1, 0)
backFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
backFrame.BorderSizePixel = 4 -- Increase the border to create an outline effect
backFrame.BorderColor3 = Color3.fromRGB(0, 255, 0) -- Outline color (green)
backFrame.Parent = backSurfaceGui

-- Create a TextLabel for the back
local backGlitchLabel = Instance.new("TextLabel")
backGlitchLabel.Size = UDim2.new(1, 0, 0.8, 0) -- Leave space for the close button
backGlitchLabel.BackgroundTransparency = 1
backGlitchLabel.TextColor3 = Color3.new(1, 0, 0) -- Red color
backGlitchLabel.Font = Enum.Font.GothamBold -- Fancy font
backGlitchLabel.Text = "BY SUSSY"
backGlitchLabel.TextScaled = true
backGlitchLabel.Parent = backFrame

-- Glitch effect function
local function applyGlitchEffect(label)
    while true do
        label.TextStrokeTransparency = math.random() -- Random glitch effect on text
        label.Position = UDim2.new(0, math.random(-5, 5), 0, math.random(-5, 5)) -- Small random shifts
        label.Parent.BackgroundTransparency = math.random(1, 3) * 0.1 -- Random background flicker
        wait(0.1)
    end
end

-- Call glitch effect for both front and back labels
spawn(function() applyGlitchEffect(frontGlitchLabel) end)
spawn(function() applyGlitchEffect(backGlitchLabel) end)

-- Function to create "101010" floating effect
local function createFloatingText()
    local text = Instance.new("TextLabel")
    text.Size = UDim2.new(0, 50, 0, 50)
    text.Text = math.random(0, 1) -- Randomly choose between 0 and 1
    text.Font = Enum.Font.GothamBold
    text.TextColor3 = Color3.fromRGB(255, 255, 255)
    text.BackgroundTransparency = 1
    text.TextScaled = true
    text.Parent = frontFrame

    -- Randomly place around GUI
    text.Position = UDim2.new(math.random(), 0, math.random(), 0)

    -- Fade and remove after a short time
    local tween = game:GetService("TweenService"):Create(text, TweenInfo.new(2, Enum.EasingStyle.Linear), {TextTransparency = 1, Position = UDim2.new(math.random(), 0, math.random(), -0.5)})
    tween:Play()
    tween.Completed:Connect(function()
        text:Destroy()
    end)
end

-- Loop to create floating "101010" text
spawn(function()
    while true do
        createFloatingText()
        wait(0.5)
    end
end)

-- Move GUI and make it face the player smoothly
game:GetService("RunService").RenderStepped:Connect(function()
    -- Position the GUI in front of the player and make it face the player
    local guiPosition = head.CFrame * CFrame.new(-3, 2, -5) -- Position slightly in front and to the left
    local lookAtPosition = head.Position -- Character's head to look at
    
    -- Set the GUI's CFrame to face the player smoothly with CFrame.lookAt
    part.CFrame = CFrame.new(guiPosition.Position, lookAtPosition):Lerp(part.CFrame, 0.95) -- Smooth transition to the new position
end)

-- Create a Close Button on the front
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0.2, 0, 0.2, 0) -- Small button on the top right
closeButton.Position = UDim2.new(0.8, 0, 0, 0) -- Top-right corner
closeButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.GothamBold
closeButton.Text = "X"
closeButton.Parent = frontFrame

-- Close GUI function
local function closeGui()
    part:Destroy()
end

-- Connect close button clicks to close function
closeButton.MouseButton1Click:Connect(closeGui)
wait(0.5)
-- Ensure this script is a LocalScript

-- Function to create the floating GUI with player join and leave notifications
local function createFloatingGuiWithNotifications()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local head = character:WaitForChild("Head")

    -- Create a part to attach the SurfaceGui to
    local part = Instance.new("Part")
    part.Size = Vector3.new(15, 10, 0.1)
    part.Anchored = true
    part.CanCollide = false
    part.Transparency = 1
    part.Parent = workspace

    -- Create the SurfaceGui for the GUI
    local surfaceGui = Instance.new("SurfaceGui")
    surfaceGui.Adornee = part
    surfaceGui.Face = Enum.NormalId.Front
    surfaceGui.CanvasSize = Vector2.new(800, 600)
    surfaceGui.Parent = part

    -- Create a Frame to hold the notifications
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0.8, 0)
    frame.BackgroundColor3 = Color3.new(0, 0, 0) -- Black background
    frame.BackgroundTransparency = 0.5 -- Semi-transparent
    frame.BorderSizePixel = 0
    frame.Parent = surfaceGui

    -- Create a UIListLayout for arranging the notifications
    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.Parent = frame
    uiListLayout.Padding = UDim.new(0, 5) -- Padding between items

    -- Create a Frame for the buttons
    local buttonFrame = Instance.new("Frame")
    buttonFrame.Size = UDim2.new(1, 0, 0.2, 0)
    buttonFrame.Position = UDim2.new(0, 0, 0.8, 0)
    buttonFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    buttonFrame.BackgroundTransparency = 0.7
    buttonFrame.BorderSizePixel = 0
    buttonFrame.Parent = surfaceGui

    -- Create a lock/unlock button
    local lockButton = Instance.new("TextButton")
    lockButton.Size = UDim2.new(0.5, 0, 0.5, 0)
    lockButton.Position = UDim2.new(0, 0, 0, 0)
    lockButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    lockButton.TextColor3 = Color3.new(1, 1, 1)
    lockButton.Text = "Lock GUI"
    lockButton.Font = Enum.Font.SourceSans
    lockButton.TextScaled = true
    lockButton.Parent = buttonFrame

    -- Create a clear list button
    local clearButton = Instance.new("TextButton")
    clearButton.Size = UDim2.new(0.5, 0, 0.5, 0)
    clearButton.Position = UDim2.new(0.5, 0, 0, 0)
    clearButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    clearButton.TextColor3 = Color3.new(1, 1, 1)
    clearButton.Text = "Clear List"
    clearButton.Font = Enum.Font.SourceSans
    clearButton.TextScaled = true
    clearButton.Parent = buttonFrame

    local isLocked = false
    local initialPosition = part.Position
    local targetPosition = part.Position

    -- Function to update notifications
    local function addNotification(message, color)
        local notificationLabel = Instance.new("TextLabel")
        notificationLabel.Size = UDim2.new(1, 0, 0, 50)
        notificationLabel.BackgroundTransparency = 1
        notificationLabel.TextColor3 = color
        notificationLabel.TextScaled = true
        notificationLabel.Font = Enum.Font.SourceSans
        notificationLabel.Text = message
        notificationLabel.Parent = frame
    end

    -- Connect player added and player removing events
    game.Players.PlayerAdded:Connect(function(newPlayer)
        addNotification(newPlayer.Name .. " has joined the game.", Color3.new(0, 1, 0)) -- Green for joining
    end)

    game.Players.PlayerRemoving:Connect(function(leavingPlayer)
        addNotification(leavingPlayer.Name .. " has left the game.", Color3.new(1, 0, 0)) -- Red for leaving
    end)

    -- Function to update position
    local function updatePosition()
        if not isLocked then
            local characterPosition = head.Position
            local offset = Vector3.new(-15, 3, 10) -- Adjust the position to the left and up
            targetPosition = characterPosition + offset
            local movementSpeed = 1 -- Slow and smooth movement

            part.Position = part.Position:Lerp(targetPosition, movementSpeed * game:GetService("RunService").RenderStepped:Wait())
            part.CFrame = CFrame.lookAt(part.Position, characterPosition)
        end
    end

    -- Update the position every frame
    game:GetService("RunService").RenderStepped:Connect(updatePosition)

    -- Lock/Unlock GUI button functionality
    lockButton.MouseButton1Click:Connect(function()
        isLocked = not isLocked
        if isLocked then
            lockButton.Text = "Unlock GUI"
            initialPosition = part.Position -- Save current position as initial
            part.Anchored = true -- Lock the part to keep it in place
        else
            lockButton.Text = "Lock GUI"
            part.Anchored = false -- Allow the part to move
        end
    end)

    -- Clear list button functionality
    clearButton.MouseButton1Click:Connect(function()
        for _, child in pairs(frame:GetChildren()) do
            if child:IsA("TextLabel") then
                child:Destroy()
            end
        end
    end)
end

-- Call the function to create the floating GUI with notifications
createFloatingGuiWithNotifications()
wait(0.4)
-- Ensure this script is a LocalScript

-- Function to create the floating curved GUI
local function createCurvedPlayerListGui()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local head = character:WaitForChild("Head")

    -- Create a part to attach the SurfaceGui to
    local part = Instance.new("Part")
    part.Size = Vector3.new(10, 5, 0.1) -- Large curved screen size
    part.Anchored = false
    part.CanCollide = false
    part.Transparency = 1 -- Make the part invisible
    part.Parent = workspace

    -- Create the SurfaceGui for the curved effect
    local surfaceGui = Instance.new("SurfaceGui")
    surfaceGui.Adornee = part
    surfaceGui.Face = Enum.NormalId.Front
    surfaceGui.CanvasSize = Vector2.new(800, 400) -- Large canvas size
    surfaceGui.Parent = part

    -- Create a Frame to hold the player list
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
    frame.BackgroundTransparency = 0.5 -- Slightly transparent background
    frame.BorderSizePixel = 0
    frame.Parent = surfaceGui

    -- Title for the GUI
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0.1, 0)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "Player List (0)" -- Initial value with 0 players
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame

    -- ScrollingFrame to display player names
    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Size = UDim2.new(1, 0, 0.9, 0)
    scrollingFrame.Position = UDim2.new(0, 0, 0.1, 0)
    scrollingFrame.BackgroundTransparency = 1
    scrollingFrame.ScrollBarThickness = 8
    scrollingFrame.Parent = frame

    -- UIListLayout to arrange player names vertically
    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Padding = UDim.new(0, 5)
    listLayout.Parent = scrollingFrame

    -- Function to update the player list and player count
    local function updatePlayerList()
        -- Clear the list before adding new entries
        for _, child in ipairs(scrollingFrame:GetChildren()) do
            if child:IsA("TextLabel") then
                child:Destroy()
            end
        end

        -- Get current players in the game
        local players = game.Players:GetPlayers()

        -- Update the title with the player count
        title.Text = string.format("Player List (%d)", #players)

        -- Add each player to the list
        for _, player in ipairs(players) do
            local playerLabel = Instance.new("TextLabel")
            playerLabel.Size = UDim2.new(1, 0, 0, 40)
            playerLabel.BackgroundTransparency = 0.5
            playerLabel.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
            playerLabel.Text = string.format("%s (%s) - UserID: %d", player.DisplayName, player.Name, player.UserId)
            playerLabel.TextColor3 = Color3.new(1, 1, 1)
            playerLabel.TextScaled = true
            playerLabel.Font = Enum.Font.SourceSans
            playerLabel.Parent = scrollingFrame
        end
    end

    -- Update player list on player join or leave
    game.Players.PlayerAdded:Connect(updatePlayerList)
    game.Players.PlayerRemoving:Connect(updatePlayerList)
    updatePlayerList() -- Initial update

    -- Function to make the GUI float smoothly and face the player
    local isGuiLocked = false
    local lockedPosition = part.Position

    local function updatePosition()
        local characterPosition = head.Position
        local offset = Vector3.new(5, 3, 10) -- Adjust the position slightly to the right and up
        local targetPosition = characterPosition + offset
        local movementSpeed = 1 -- Slow and smooth movement

        if not isGuiLocked then
            part.Position = part.Position:Lerp(targetPosition, movementSpeed * game:GetService("RunService").RenderStepped:Wait())
            lockedPosition = part.Position
        else
            -- Lock the part at the current position
            part.Position = lockedPosition
        end

        -- Make the part always face the player
        part.CFrame = CFrame.lookAt(part.Position, characterPosition)
    end

    -- Update the position every frame
    game:GetService("RunService").RenderStepped:Connect(updatePosition)

    -- Create a button to lock/unlock the GUI
    local lockButton = Instance.new("TextButton")
    lockButton.Size = UDim2.new(0.2, 0, 0.1, 0)
    lockButton.Position = UDim2.new(0.8, 0, 0, 0)
    lockButton.BackgroundColor3 = Color3.new(1, 0, 0)
    lockButton.Text = "Lock GUI"
    lockButton.TextColor3 = Color3.new(1, 1, 1)
    lockButton.TextScaled = true
    lockButton.Parent = frame

    lockButton.MouseButton1Click:Connect(function()
        isGuiLocked = not isGuiLocked
        lockButton.Text = isGuiLocked and "Unlock GUI" or "Lock GUI"

        -- If locked, store the current position to lock the GUI there
        if isGuiLocked then
            lockedPosition = part.Position
        end
    end)
end

-- Call the function to create the floating player list GUI
createCurvedPlayerListGui()

